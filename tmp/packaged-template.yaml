AWSTemplateFormatVersion: 2010-09-09
Description: "- CodeStar Connection V2 Github\n- CodePipeline\n- Codebuild\n"
Parameters:
  GitHubBranch:
    Type: String
    Default: prod
  GithubRepo:
    Type: String
    Default: rath23/aws-bootcamp-cruddur-2023
  ClusterStack:
    Type: String
  ServiceStack:
    Type: String
  ArtifactBucketName:
    Type: String
Resources:
  CodeBuildBakeImageStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.ap-south-1.amazonaws.com/cfn-artifacts-bckt/cicd-package/dd3a640e0eb06454709ff8cedffc7d38.template
  CodeStarConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName:
        Fn::Sub: ${AWS::StackName}-connection
      ProviderType: GitHub
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: ArtifactBucketName
        Type: S3
      RoleArn:
        Fn::GetAtt:
        - CodePipelineRole
        - Arn
      Stages:
      - Name: Source
        Actions:
        - Name: ApplicationSource
          RunOrder: 1
          ActionTypeId:
            Category: Source
            Provider: CodeStarSourceConnection
            Owner: AWS
            Version: '1'
          OutputArtifacts:
          - Name: Source
          Configuration:
            ConnectionArn:
              Ref: CodeStarConnection
            FullRepositoryId:
              Ref: GithubRepo
            BranchName:
              Ref: GitHubBranch
            OutputArtifactFormat: CODE_ZIP
      - Name: Build
        Actions:
        - Name: BuildContainerImage
          RunOrder: 1
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          InputArtifacts:
          - Name: Source
          OutputArtifacts:
          - Name: ImageDefinition
          Configuration:
            ProjectName:
              Fn::GetAtt:
              - CodeBuildBakeImageStack
              - Outputs.CodeBuildProjectName
            BatchEnabled: false
      - Name: Deploy
        Actions:
        - Name: Deploy
          RunOrder: 1
          ActionTypeId:
            Category: Deploy
            Provider: ECS
            Owner: AWS
            Version: '1'
          InputArtifacts:
          - Name: ImageDefinition
          Configuration:
            DeploymentTimeout: '10'
            ClusterName:
              Fn::ImportValue:
                Fn::Sub: ${ClusterStack}ClusterName
            ServiceName:
              Fn::ImportValue:
                Fn::Sub: ${ServiceStack}ServiceName
          RoleArn:
            Fn::GetAtt:
            - CodePipelineRole
            - Arn
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyName:
          Fn::Sub: ${AWS::StackName}EcsDeployPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: TaskDefinitionPermissions
            Effect: Allow
            Action:
            - ecs:DescribeTaskDefinition
            - ecs:RegisterTaskDefinition
            Resource: '*'
          - Sid: ECSServicePermissions
            Effect: Allow
            Action:
            - ecs:DescribeServices
            - ecs:DescribeTasks
            - ecs:ListTasks
            - ecs:UpdateService
            - ecs:StopTask
            - ecs:RunTask
            Resource: arn:aws:ecs:*:651746472793:service/cruddur/*
          - Sid: ECSTagResource
            Effect: Allow
            Action: ecs:TagResource
            Resource: '*'
      - PolicyName:
          Fn::Sub: ${AWS::StackName}IamPassRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: iam:PassRole
            Resource:
            - Fn::ImportValue:
                Fn::Sub: ${ServiceStack}TaskExecutionRoleArn
            - Fn::ImportValue:
                Fn::Sub: ${ServiceStack}TaskRoleArn
            Condition:
              StringEquals:
                iam:PassedToService:
                - ecs.amazonaws.com
                - ecs-tasks.amazonaws.com
      - PolicyName:
          Fn::Sub: ${AWS::StackName}CodeStarPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: codestar-connections:UseConnection
            Resource: arn:aws:codestar-connections:ap-south-1:651746472793:connection/*
      - PolicyName:
          Fn::Sub: ${AWS::StackName}PipelineInfraPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${ArtifactBucketName}/*
          - Effect: Allow
            Action:
            - s3:ListBucket
            Resource:
              Fn::Sub: arn:aws:s3:::${ArtifactBucketName}
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - cloudformation:*
            - iam:PassRole
            - iam:CreateRole
            - iam:DetachRolePolicy
            - iam:DeleteRolePolicy
            - iam:PutRolePolicy
            - iam:DeleteRole
            - iam:AttachRolePolicy
            - iam:GetRole
            Resource: '*'
      - PolicyName:
          Fn::Sub: ${AWS::StackName}CodeBuildTriggerPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - codebuild:StartBuild
            - codebuild:StopBuild
            - codebuild:RetryBuild
            - codebuild:BatchGetBuilds
            Resource: arn:aws:codebuild:ap-south-1:651746472793:project/CodeBuild-*
